
# Valgrind memcheck suppressions file
# Suppresses known memcheck leaks in Tcl, MPICH, and OpenMPI
# Turbine/ADLB/C-Utils should have no leaks
# No leaks as of 2018-06-28, 2020-05-10

# Suppressions are listed with library version and date of creation
#    so that old suppressions can be removed if no longer necessary.

# To use: set
#   VALGRIND='valgrind --suppressions=turbine.supp --num-callers=$N'
# Set N high for MPICH errors- these have deep call stacks

# Put these in your .valgrindrc:
# -q
# --memcheck:leak-check=yes
# --memcheck:track-origins=yes
# --show-reachable=yes

# Other tips:
# http://wiki.tcl.tk/3840
# http://wiki.tcl.tk/3248

# Use: export LANG=POSIX - helps a little (not anymore 2018/06)
#      Tcl -DPURIFY - did not help
# Configure MPICH with --enable-g=dbg,meminit
#       meminit prevents uninitialized data warnings

{
  tcl-malloc-1
  Memcheck:Leak
  fun:malloc
  fun:Tcl_Alloc
  ...
}

{
  tcl-malloc-2
  Memcheck:Leak
  fun:malloc
  ...
  fun:TclpAlloc
  ...
}

{
  tcl-malloc-3
  Memcheck:Leak
  fun:malloc
  fun:GetBlocks
  fun:TclpAlloc
  ...
}

{
  tcl-malloc-4
  Memcheck:Leak
  fun:malloc
  ...
  fun:TclNREvalObjv
  ...
  # 8.6 2018/06
}

{
  tcl-malloc-5
  Memcheck:Leak
  fun:malloc
  ...
  fun:Tcl_RegisterConfig
  ...
  # 8.6 2018/06
}

{
  tcl-malloc-6
  Memcheck:Leak
  fun:malloc
  ...
  fun:Tcl_NewObj
  fun:Tcl_CreateInterp
  ...
  # 8.6 2018/06
}

{
  tcl-load-calloc-1
  Memcheck:Leak
  fun:calloc
  fun:_dl_check_map_versions
  ...
  fun:Tcl_LoadFile
  ...
  # 8.6 2018/06
}

{
  tcl-thread-malloc-4
  Memcheck:Leak
  fun:malloc
  fun:TclThreadAllocObj
  ...
}

{
  tcl-thread-malloc-5
  Memcheck:Leak
  fun:malloc
  fun:TclpThreadCreateKey
  ...
}

{
  tcl-table-malloc-1
  Memcheck:Leak
  fun:malloc
  fun:TSDTableCreate
  fun:TclThreadStorageKeySet
  ...
}

{
  tcl-storage-malloc-1
  Memcheck:Leak
  fun:malloc
  fun:TclThreadStorageKeySet
  fun:Tcl_GetThreadData
  fun:TclInitSubsystems
  fun:Tcl_CreateInterp
  fun:main
  # 8.6 2018/06
}

{
  tcl-mutex-malloc-1
  Memcheck:Leak
  fun:malloc
  fun:TclpNewAllocMutex
  ...
}

{
  tcl-dlopen-1
  Memcheck:Leak
  fun:calloc
  ...
  fun:TclpDlopen
  ...
}

{
  tcl-cache-calloc-1
  Memcheck:Leak
  fun:calloc
  ...
  fun:TclpAlloc
  ...
}

{
  tcl-pthread-calloc-1
  Memcheck:Leak
  fun:calloc
  ...
  fun:TclpThreadCreate
  ...
}


{
  tcl-realloc-1
  Memcheck:Leak
  fun:realloc
  fun:TclpRealloc
  ...
}

{
  tcl-vasprintf-realloc-2
  Memcheck:Leak
  fun:realloc
  fun:vasprintf
  fun:asprintf
  fun:dlerror
  fun:FindSymbol
  ...
}

{
  tcl-table-realloc-1
  Memcheck:Leak
  fun:realloc
  fun:TSDTableGrow
  fun:TclThreadStorageKeySet
  fun:Tcl_GetThreadData
  ...
}

{
  tcl-callbacks-realloc-1
  Memcheck:Leak
  fun:realloc
  ...
  fun:Tcl_GetThreadData
  ...
  fun:TclNRRunCallbacks
  ...
  # 8.6 2018/06
}

{
  tcl-callbacks-calloc-1
  Memcheck:Leak
  fun:calloc
  ...
  fun:_dlerror_run
  ...
  fun:TclNRRunCallbacks
  ...
  # 8.6 2018/06
}

{
  tcl-callbacks-malloc-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:Tcl_GetThreadData
  ...
  fun:CreateInterp
  ...
  # 8.6 2018/06
}

{
  tcl-pwuid-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:TclpGetPwUid
  ...
}

{
  tcl-allocatefreeobjects
  Memcheck:Leak
  fun:malloc
  fun:Tcl_Alloc
  fun:TclAllocateFreeObjects
}

{
  mpi-memalign-1
  Memcheck:Leak
  fun:memalign
  ...
  fun:tls_get_addr_tail
  ...
  fun:PMPI_Init
}

{
  mpi-init-calloc
  Memcheck:Leak
  fun:calloc
  ...
  fun:PMPI_Init
}

{
  mpi-vcrt
  Memcheck:Leak
  fun:malloc
  fun:MPID_VCRT_Create
}

# The following Param suppressions are unnecessary when using
#     MPICH's meminit...

{
  mpi-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iStartContigMsg
  ...
  fun:PMPI_Send
}

{
  mpi-barrier-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iSendContig
  ...
  fun:PMPI_Barrier
}

{
  mpi-comm-dup-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  ...
  fun:PMPI_Comm_dup
}

{
  mpi-comm-split-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  ...
  fun:PMPI_Comm_split
}

{
  mpi-allgather-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iSendContig
  ...
  fun:PMPI_Allgather
}

{
  mpi-reduce-local
  Memcheck:Leak
  fun:malloc
  fun:allocate_dtv_entry
  ...
  fun:MPIR_Reduce_local_impl
  ...
  # 3.2.1 2018/06
}

{
  mpi-finalize-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iStartContigMsg
  ...
  fun:PMPI_Finalize
  ...
}

{
  glib-dlopen-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:dl_open_worker
  ...
  fun:dlopen_doit
  ...
}

{
  glib-dlopen-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:dl_open_worker
  ...
  fun:dlopen_doit
  ...
}

{
  vg-calloc-1
  Memcheck:Leak
  fun:calloc
  fun:_dl_map_object_from_fd
  ...
  fun:_dl_catch_error
}

{
  vg-calloc-2
  Memcheck:Leak
  fun:calloc
  fun:_dl_new_object
  ...
  fun:_dl_catch_error
}

{
  vg-malloc-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:pthread_exit
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-strdup-1
  Memcheck:Leak
  fun:malloc
  fun:strdup
  ...
  fun:mca_base_framework_components_register
  ...
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-strdup-2
  Memcheck:Leak
  fun:malloc
  fun:strdup
  ...
  fun:opal_info_set
  fun:ompi_mpiinfo_init
  ...
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-dl-1
  Memcheck:Leak
  fun:calloc
  fun:_dl_new_object
  fun:_dl_map_object_from_fd
  ...
  fun:_dl_catch_exception
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-finalize-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:_dl_close_worker
  ...
  fun:mca_base_component_repository_finalize
  ...
  fun:opal_finalize_util
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-dl-2
  Memcheck:Leak
  fun:calloc
  fun:do_lookup_unique
  ...
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-init-info-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:opal_info_set
  ...
  fun:ompi_mpi_init
  ...
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-init-infosubscribe-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:opal_infosubscribe_subscribe
  ...
  fun:ompi_mpi_init
  ...
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-init-mpiinfo-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:ompi_mpiinfo_init
  fun:ompi_mpi_init
  ...
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-finalize-2
  Memcheck:Leak
  fun:malloc
  ...
  fun:_dl_close
  ...
  fun:mca_base_component_repository_release
  ...
  fun:mca_base_component_close
}

{
  # OpenMPI 3.1.3 2020-05-10
  ompi-init-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:mca_base_framework_open
  ...
  fun:ompi_mpi_init
  ...
}


{
  # OpenMPI 3.1.3 2020-05-10
  ompi-orte-init-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:orte_oob_base_select
  ...
  fun:ompi_mpi_init
  ...
}

# Local Variables:
# mode: sh
# sh-basic-offset: 2
# End:
